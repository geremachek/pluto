#!/usr/bin/python -B

from curses import *
from sys import *
from os import *
from shutil import *
from subprocess import *
import os.path
import sys

sys.dont_write_bytecode = True

from parser import *

cwd = getcwd()
home = os.path.expanduser("~")

s = initscr()
maxY, maxX = s.getmaxyx()
noecho()
s.keypad(1)
curs_set(0)
start_color()
use_default_colors()

for i in range(0, 256):
    init_pair(i+ 1, i, -1)

top = topOffset
bottom = maxY-bottomOffset
off = sideOffset
count = 0
filen = 0
viewDots = False

buff1, buff2 = 0, bottom

currY, currX = top, off

currFiles = listdir(cwd)
scrollFiles = []
currSort = []
selectedFiles = {}

def screenClear():
    for iy in range(0, maxY):
        s.move(0, iy)
        for ix in range(0, maxX):
            s.addstr(" ")
            s.move(iy, ix)
    s.move(top, off)

def lineClear(y, x):
    for ix in range(0, x):
        s.addstr(" ")
        s.move(y, ix)

def colorText(string, fmt):
    if str(string) in selectedFiles and selectedFiles[str(string)] == cwd:
        selected = "*"
    else:
        selected = ""

    if dirSlash:
        slash = "/"
    else:
        slash = ""

    if os.path.isdir(str(string)):
        s.addstr(str(string) + slash + selected, color_pair(fileColors['dir']) + fmt)
    elif str(string).split('.')[len(str(string).split('.'))-1] in fileColors:
        s.addstr(str(string) + selected, color_pair(fileColors[str(string).split('.')[len(str(string).split('.'))-1]]) + fmt)
    else:
        s.addstr(str(string) + selected, color_pair(fileColors['file']) + fmt)

def dispFile(array):
    global count
    count = top
    for item in array:
        if count != bottom:
            s.move(count, off)
            colorText(item, A_NORMAL)
            count += 1
        else:
            break

def selFile(array, index):
    s.move(currY, currX)
    colorText(array[index], selType)
    s.move(currY, currX)

def dSelFile(array, index):
    s.move(currY, currX)
    colorText(array[index], A_NORMAL)
    s.move(currY, currX)

def scroll(direction):
    global scrollFiles, buff1, buff2
    if direction == 0:
        buff1 += 1
        buff2 += 1
    else:
        buff1 -= 1
        buff2 -= 1

def sortFiles():
    global currFiles, currSort
    currSort = []
    index = 0
    if viewDots == False:
        while index < len(currFiles):
            if currFiles[index][0] == ".":
                currFiles.pop(currFiles.index(currFiles[index]))
            else:
                index += 1
    else:
        pass

    index = 0
    while index < len(currFiles):
        files = currFiles[index]
        if os.path.isdir(files):
            currFiles.pop(currFiles.index(files))
            currSort.append(files)
        else:
            index += 1
    currSort = sorted(currSort, key=lambda s: s.lower())
    nc = sorted(currFiles, key=lambda s: s.lower())
    currFiles = currSort + nc

def moveDir(newdir):
    global cwd, currY, currX, buff1, buff2, filen, currSort, currFiles
    chdir(newdir)
    cwd = getcwd()
    currY, currX = top, off
    buff1, buff2 = 0, bottom
    filen = 0
    currFiles = listdir(cwd)
    sortFiles()
    screenClear()
    bar()
    s.move(currY, currX)
    dispFile(currFiles)
    selFile(currFiles, filen)

def removeFiles(files):
    global cwd, currFiles, filen
    if os.path.isfile(files):
        remove(files)
    else:
        rmtree(files)

    cwd = getcwd()
    currFiles = listdir(cwd)
    sortFiles()

def bar():
    if barEnable: 
        if barLocale == "bottom": 
            s.move(maxY-barY, barX)
        elif barLocale == "top":
            s.move(barY, barX)
        else:
            pass

        if selectedFiles == {}: 
            s.addstr(cwd + "                              ", color_pair(barColor) + A_DIM)
        else:
            s.addstr(cwd + " [" + str(len(selectedFiles)) + "]", color_pair(barColor) + A_DIM)
        s.move(currY, currX)
    else:
        pass

def openFilePlut(fileDict, ext, fname):
    if fileDict[ext][1] == 'term':
        run([fileDict[ext][0], fname])
        endwin()
        s.refresh()
    elif fileDict[ext][1] == 'back':
        system(fileDict[ext][0] + " " + fname + " &> /dev/null &")
        endwin()
        s.refresh()


def main():
    global filen, currFiles, currY, currX, currSort, cwd, selectedFiles, maxY, maxX, viewDots
    sortFiles()
    dispFile(currFiles[buff1:buff2])
    selFile(currFiles, filen)
    bar()

    while True:
        keyInput = s.getch()
        maxY, maxX = s.getmaxyx()
        if keyInput == keyMaps['quit']:
            endwin()
            exit()
        elif keyInput == keyMaps['down']:
            if currY == bottom-1 and filen != len(currFiles)-1:
                screenClear()
                bar()
                scroll(0)
                filen += 1
                dispFile(currFiles[buff1:buff2])
                selFile(currFiles, filen)
            elif currY == bottom-1 or filen == len(currFiles)-1:
                continue
            else:
                dSelFile(currFiles, filen)
                filen += 1
                currY += 1
                selFile(currFiles, filen)
        elif keyInput == keyMaps['up']:
            if currY == top and filen == 0:
                continue
            elif currY == top and filen != 0:
                screenClear()
                bar()
                scroll(1)
                filen -= 1
                dispFile(currFiles[buff1:buff2])
                selFile(currFiles, filen)
            else:
                dSelFile(currFiles, filen)
                filen -= 1
                currY -= 1
                selFile(currFiles, filen)
        elif keyInput == keyMaps['left']:
            moveDir("..")
        elif keyInput == keyMaps['right']:
            openFile = currFiles[filen]
            if os.path.isdir(openFile):
                if listdir(openFile) != []:
                    moveDir(str(openFile))
                else:
                    continue
            else:
                if openFile.split('.')[-1] not in openFiles:
                    openFilePlut(openFiles, 'file', openFile)
                elif openFile.split('.')[-1] in openFiles:
                    openFilePlut(openFiles, openFile.split('.')[-1], openFile)

        elif keyInput == keyMaps['delete']:
            removeFiles(str(currFiles[filen]))
            screenClear()
            bar()
            if currY == top and buff1 == 0:
                pass
                dispFile(currFiles)
            elif buff1 == 0:
                filen -= 1
                currY -= 1
                dispFile(currFiles)
            else:
                filen -= 1
                scroll(1)
                dispFile(currFiles[buff1:buff2])

            selFile(currFiles, filen)
        elif keyInput == keyMaps['select']:
            if currFiles[filen] not in selectedFiles:
                selectedFiles[str(currFiles[filen])] = cwd
            else:
                del selectedFiles[str(currFiles[filen])]
            screenClear()
            bar()
            dispFile(currFiles[buff1:buff2])
            selFile(currFiles, filen)
        elif keyInput == keyMaps['copy']:
            for key, val in selectedFiles.items():
                copyfile(val + "/" + key, cwd + "/" + key)
            selectedFiles = {}
            screenClear()
            bar()
            cwd = getcwd()
            currFiles = listdir(cwd)
            sortFiles()
            dispFile(currFiles[buff1:buff2])
            selFile(currFiles, filen)
        elif keyInput == keyMaps['move']:
            for key, val in selectedFiles.items():
                move(val + "/" + key, cwd + "/" + key)
            selectedFiles = {}
            screenClear()
            bar()
            cwd = getcwd()
            currFiles = listdir(cwd)
            sortFiles()
            dispFile(currFiles[buff1:buff2])
            selFile(currFiles, filen)
        elif keyInput == keyMaps['toggle-dot']:
            if viewDots == False:
                viewDots = True
            else:
                viewDots = False

            moveDir(".")
        else:
            for key, val in keyMaps.items():
                if val == keyInput:
                    if key[:3] == "cd:":
                        moveDir(key[3:])
                    elif key[:7] == "script:":
                        system(key[7:].rstrip() + " " + cwd + "/" +currFiles[filen] + " &> /dev/null &")
                        endwin()
                        s.refresh()
                        moveDir(".")
                else:
                    continue
main()
